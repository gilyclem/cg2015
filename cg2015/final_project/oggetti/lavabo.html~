<!DOCTYPE html>
<html>
 <head> 
  <title>Repeat wrapping parquet</title> 
  <style>
    body{
      margin: 0;
      overflow: hidden;
    }
    #stats {  /* Align stats top-left */
      position: absolute;
      left: 0px;
      top: 0px;
    }
  </style> 
  </head>
  <body>
  <!-- JavaScript libraries -->
  <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script> 
  <script src="http://cdnjs.cloudflare.com/ajax/libs/three.js/r67/three.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/stats.js/r11/Stats.min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.5/dat.gui.min.js"></script>
	<script src="assets/libs/TrackballControls.js"></script>
  <!-- Javascript code that runs our Three.js examples --> 
  <script>
    // once everything is loaded, we run our Three.js stuff.
    $(function () {
      var stats = initStats();
      // create a scene, that will hold all our elements such as objects, cameras and lights.
      var scene = new THREE.Scene();
      // create a camera, which defines where we're looking at.
      var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
      // create a render and set the size
	var trackballControls = new THREE.TrackballControls(camera);
      var webGLRenderer = new THREE.WebGLRenderer();
      webGLRenderer.setClearColor(0xEEEEEE, 1.0);
      webGLRenderer.setSize(window.innerWidth, window.innerHeight);
     
	var lato1 = 2;
	var lato2 = 1;
	var altezza = 0.2;

      var lavabo = new THREE.Object3D();
	
        var mat1 = new THREE.MeshPhongMaterial( {color: 0xccffff});
       mat1.transparent=true;
	mat1.opacity=0.5;
	mat1.side = THREE.DoubleSide;
	
	var metal = new THREE.MeshLambertMaterial( {color: 0xa8bac3} );
	var piano = new THREE.Shape();
	piano.moveTo( -1, -0.5 );
	piano.lineTo( 1, -0.5 );
	piano.lineTo( 1, 0.5 );
	piano.lineTo( -1, 0.5);
	piano.lineTo( -1, -0.5 );
       
	var semisfera = new THREE.SphereGeometry(0.3, 32, 32, 0, Math.PI, 0, Math.PI);
	var semisfera1 = new THREE.Mesh( semisfera, mat1 ) ;
	semisfera1.rotation.x+=Math.PI/2;
	
	var shape = new THREE.Shape();
	
	shape.moveTo( 0.3, 0 );
	shape.absarc( 0, 0, 0.3, 0, 2 * Math.PI, true );
	piano.holes.push( shape );
 	

	var extrudeSettings = {
	amount:0.06,
	bevelEnabled:false
};


	var piano_geo2 = new THREE.ExtrudeGeometry( piano, extrudeSettings );
	var piano1 = new THREE.Mesh( piano_geo2, mat1 ) ;		
	piano1.rotation.x+=Math.PI/2;
	
	var rubinetto_tot = new THREE.Object3D();

	var rubinetto_geo = new THREE.TorusGeometry(0.15, 0.03, 16, 32,Math.PI);
	var rubinetto = new THREE.Mesh( rubinetto_geo, metal ) ;
	rubinetto.rotation.y+=Math.PI/2;
	rubinetto.position.z+=0.2;
	rubinetto.position.y-=0.2;
	rubinetto.position.x+=0.25;

	var tubo_geo = new THREE.CylinderGeometry( 0.03, 0.03,0.3 ,32);
	var tubo = new THREE.Mesh( tubo_geo, metal ) ;
	
	tubo.position.x+=0.4;
	tubo.position.y+=0.2;

	var tubo_geo2 = new THREE.CylinderGeometry( 0.03, 0.03,0.2 ,32);
	var tubo3 = new THREE.Mesh( tubo_geo2, metal ) ;
	
	tubo3.position.z-=0.4;
	tubo3.position.y-=0.03;
	tubo3.rotation.x+=Math.PI/2;

	rubinetto.position.y+=0.52;
	rubinetto.position.z-=0.2;
	rubinetto.rotation.y+=Math.PI/2;

	rubinetto_tot.add(rubinetto);
	rubinetto_tot.add(tubo);
	rubinetto_tot.rotation.y+=Math.PI/2;
	rubinetto_tot.position.z+=0.05;
	rubinetto_tot.position.y-=0.1;
	var tubo_geo = new THREE.CylinderGeometry( 0.05, 0.05, 0.5 , 32 );
	//var rubinetto_geo = new THREE.BoxGeometry( 0.05, 0.05, 0.5 );
	//var getto_geo = new THREE.CylinderGeometry( 0.05, 0.05, 0.05 , 32);
	var tappo_geo = new THREE.CylinderGeometry( 0.07, 0.07, 0.01 ,32);
	var appendino_geo = new THREE.CylinderGeometry( 0.02, 0.02, 2 ,32);
	var braccio_geo = new THREE.CylinderGeometry( 0.015, 0.015, 0.15 ,32);
	//var getto = new THREE.Mesh( getto_geo, metal ) ;
	var tappo = new THREE.Mesh( tappo_geo, metal ) ;
	var appendino = new THREE.Mesh( appendino_geo, metal ) ;
	var tubo1 = new THREE.Mesh( tubo_geo, metal ) ;
	var braccio1 = new THREE.Mesh( braccio_geo, metal ) ;
	var braccio2 = new THREE.Mesh( braccio_geo, metal ) ;
	tubo1.position.y-=0.52;
	var tubo2 = new THREE.Mesh( tubo_geo, metal ) ;
	tubo2.rotation.x-=Math.PI/2;
	tubo2.position.y-=0.75;
	tubo2.position.z-=0.2;
	/*var rubinetto = new THREE.Mesh( rubinetto_geo, metal ) ;
	rubinetto.position.y+=0.52;
	rubinetto.position.z-=0.2;
	getto.position.y+=0.52;*/
	tappo.position.y-=0.27;
	appendino.rotation.z-=Math.PI/2;
	appendino.position.y-=0.2;
	appendino.position.z+=0.45;
	braccio1.position.z+=0.45;
	braccio1.position.x+=0.9;
	braccio1.position.y-=0.1;
	braccio2.position.z+=0.45;
	braccio2.position.x-=0.9;
	braccio2.position.y-=0.1;
	lavabo.add(piano1);
	lavabo.add(tubo1);
	//lavabo.add(getto);
	lavabo.add(tappo);
	lavabo.add(tubo2);
	lavabo.add(tubo3);
	lavabo.add(braccio1);
	lavabo.add(braccio2);
	lavabo.add(appendino);
	//lavabo.add(rubinetto);
	lavabo.add(semisfera1);
	lavabo.add(rubinetto_tot);
      	scene.add(lavabo);
	
      
      // position and point the camera to the center of the scene
      camera.position.set(5,5,5);
      camera.lookAt(new THREE.Vector3(0, 0, 0));
      var ambiLight = new THREE.AmbientLight(0x141414)
      scene.add(ambiLight);
      var light = new THREE.DirectionalLight();
      light.position.set(0, 30, 20);
      scene.add(light);
      // add the output of the renderer to the html element
      $('body').append(webGLRenderer.domElement);
      // call the render function
      
      // setup the control gui
  
      render();
      
      function render() {
        stats.update();
	trackballControls.update();      
        // render using requestAnimationFrame
        requestAnimationFrame(render);
        webGLRenderer.render(scene, camera);
      }
      function initStats() {
        stats = new Stats();
        stats.setMode(0); // 0: fps, 1: ms
        $('body').append(stats.domElement);
        return stats;
      }
    });
  </script>  
 </body>
</html>
